apiVersion: v1
kind: Service
metadata: { name: postgres }
spec:
  ports: [{ port: 5432, name: pg }]
  clusterIP: None
  selector: { app: postgres }
---
apiVersion: apps/v1
kind: StatefulSet
metadata: { name: postgres }
spec:
  serviceName: postgres
  replicas: 1
  selector: { matchLabels: { app: postgres } }
  template:
    metadata: { labels: { app: postgres } }
    spec:
      containers:
        - name: postgres
          image: postgres:16-alpine
          env:
            - { name: POSTGRES_DB, value: {{ .Values.db.name | quote }} }
            - { name: POSTGRES_USER, value: {{ .Values.db.user | quote }} }
            - { name: POSTGRES_PASSWORD, value: {{ .Values.db.password | quote }} }
          ports: [{ containerPort: 5432, name: pg }]
          volumeMounts:
            - { name: data, mountPath: /var/lib/postgresql/data }
            - { name: init, mountPath: /docker-entrypoint-initdb.d/ }
      volumes:
        - name: init
          configMap:
            name: voting-config
            items: [{ key: init.sql, path: 01_init.sql }]
  volumeClaimTemplates:
    - metadata: { name: data }
      spec:
        accessModes: ["ReadWriteOnce"]
        resources: { requests: { storage: {{ .Values.db.storage | quote }} } }